sidplay for DEBIAN/Linux
*************************

This package was debianised, packaged and is currently maintained by me,
Ulf Jaenicke-Roessler <ujr@debian.org>, from the sources that I obtained
from the SidPlay HomePage at
 http://www.geocities.com/SiliconValley/Lakes/5147/
The author can be reached by mailing him to sidplay@geocities.com.

Generally I'm using pristine sources (since version 1.36.11), that is
as far as one can still speak of pristine sources after unpacking
downloaded src.rpm's.
 rpm -i sidplay-{version}.src.rpm
and
 rpm -bp sidplay-{version}.spec (or just rpm -bp sidplay.spec)
were used to create the source directory. Sometimes the author supplies
patches for new upstream versions before he uploads a complete new version
to the location above. These patches are also used if appropriate.

Version 1.36.20 (and newer) use GNU autoconf. ./configure is automatically
run as part of rpm -bp, which agrees perfectly to our policy and
packaging manual. Unfortunately, it doesn't simplify the package build
in debian/rules very much, because we need to compile static and shared
libraries with different compiler flags.
Besides, the cache file remains in the archive and doesn't get rebuild on
other architecture (simply because it exists). First, I added a 'distclean'
target to Makefile.in myself, now it is already included in the upstream
sources. This means, we can call it in "debian/rules clean" and (re)run
./configure afterwards during "debian/rules build" to recreate the
information on every other supported architecture.

In 1.36.18 I changed the major version of the library (and therefore its
soname as well) from 1 to 1.36 in order to synchronize with the upstream
sources again (the upstream author made this change already in 1.36.11).

The only really remarkable point while adding support for the Debian package
maintenance scheme was the execution of the upstream Makefiles with
CXXFLAGS including -fPIC and -D_REENTRANT (according to the policy manual).
At the moment I'm using egcs instead of gcc for the package build, because
it seems to create stable programs with all necessary commandline options,
even -fPIC, -g and optimizations (what gcc didn't). Telling the upstream
author about these experiences he disabled the build and installation of
the shared library by default. However, with egcs, it seems to be safe
enough to build and use the shared library anyway. So I needed to use a
slightly changed 'installation': every single part is installed separately
(ie, it doesn't use 'make install').

The directory console/audio contains special audio drivers for certain
other hardware (PC speaker, HP, sgi, ...). Please check if you need it
when you rebuild the package. The current setup uses Linux drivers.

There's neither a man page nor an info file available, simply because the
upstream sources don't contain it. Because lintian complains about that,
I'm using the "undocumented" page - maybe, some day I'll find the time and
inspiration to write a real man page.
The package contains now the updated html-info files from the SidPlay-Homepage,
which don't actually belong to the upstream source, but fit very well (IMHO).
This is an invaluable piece of information for SidPlay interna and background.
These files replace the outdated sidplay-info files, which were included in
previous versions.
The files are small enough to justify the addition, and to prevent splitting
them into something like a libsidplay-doc package.

Some things you may want to try:
. sidplay -h	shows a help screen (same as sidplay --help)
. sid2wav -h	shows another help screen (same as sidplay --help)
. sidplay	can get a tune's data from standard input
. sid2wav	saves a sid tune as .wav file
And there's 'sidcon' - according to the source 'A dirty sidtune format
converter hack with almost no security code'. It converts between PSID
and C64 data files. Actually I've never used it myself, so I can't really
tell you why you could need it...

Ulf Jaenicke-Roessler <ujr@debian.org>, Tue,  9 Mar 1999 23:36:01 +0100

 vim:tw=79
